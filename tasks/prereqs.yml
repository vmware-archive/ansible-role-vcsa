#
#  Copyright 2015 VMware, Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
---
- name: vmware_guest module requires some pip packages
  async: 300
  poll: 0
  pip:
    name: "{{async_item}}"
    state: "present"
  with_items:
    - pysphere
    - pyVmomi
  register: pip_results
  changed_when: false
  loop_control:
    loop_var: "async_item"

- name: Include OS-specific variables
  include_vars: "{{ ansible_os_family }}.yml"
  when: ansible_os_family is defined

- name: Include variables for Mac platform
  include_vars: "{{ ansible_distribution }}.yml"
  when: ansible_distribution == 'MacOSX'

- name: Include variables for Linux/Windows platform
  include_vars: "{{ ansible_system }}.yml"
  when: ansible_system is defined

- name: Ensure needed packages are installed
  package:
    name: "{{ item }}"
    state: "present"
  with_items: "{{ vcsa_installer_required_packages }}"

- block:
    - name: Assert that deploy host exists
      assert:
        that:
          - "vcsa_host_address is defined"
        msg: "vcsa_host_address must be defined as the ip or fqdn of the esxi or vcenter to which the ova will deploy"

    - name: Check the UI
      uri:
        url: https://{{ vcsa_host_address }}/ui
        validate_certs: False
        follow_redirects: True
        method: GET
        return_content: yes
      register: ui
      failed_when: ui.content is not defined

    - name: Record this is a deploy to ESXi
      set_fact:
        vcsa_deploy_host_type: esxi
      when: "'esxUi' in ui.content"

    - name: Assert using a valid deploy type against host type
      assert:
        that:
          - "vcsa_deploy_host_type|lower in vcsa_install_type|lower"
        msg: "Deploy on host type {{ vcsa_deploy_host_type }} is not valid with vcsa_install_type == {{ vcsa_install_type }}"

    - name: Check existance of vcsa ISO file
      stat:
        path: "{{ downloads_dir }}/{{ chaperone_vcsa_iso }}"
        get_checksum: no
        get_md5: no
        get_mime: no
        get_attributes: no
      register: iso_file

    - name: "Assert the iso exists"
      assert:
        that:
          - "iso_file.stat.exists and iso_file.stat.exists"
        msg: "The ISO for the VCSA must be exist on the host running the deploy"

    - name: Mount the ISO
      mount:
        path: "{{ mount_dir_path }}"
        src: "{{ downloads_dir }}/{{ chaperone_vcsa_iso }}"
        fstype: iso9660
        opts: ro
        state: mounted
      changed_when: false

  when: not vcsa_destroy_applicance
